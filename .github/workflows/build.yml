name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller (Windows)
      if: runner.os == 'Windows'
      run: |
        pyinstaller --noconfirm --onefile --windowed --name=EyeTracker-Windows --add-data="assets;assets" --add-data="arduino;arduino" main.py
        
    # Build using Spec file to include Info.plist
    - name: Build with PyInstaller (macOS)
      if: runner.os == 'macOS'
      run: |
        cd build_spec_files/macos
        pyinstaller EyeTracker-macOS.spec
        cd ../..
        # Copy the built app to dist directory
        cp -r build_spec_files/macos/dist/EyeTracker.app dist/
        
    - name: Build with PyInstaller (Linux)
      if: runner.os == 'Linux'
      run: |
        pyinstaller --noconfirm --onefile --windowed --name=EyeTracker-Linux --add-data="assets:assets" --add-data="arduino:arduino" main.py
        
    - name: Create distribution package (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir release
        copy dist\EyeTracker-Windows.exe release\
        xcopy arduino release\arduino\ /E /I
        copy README.md release\
        copy LICENSE release\
        cd release
        Compress-Archive -Path * -DestinationPath ..\EyeTracker-Windows.zip
      shell: powershell
        
    - name: Create distribution package (macOS/Linux)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        mkdir -p release
        if [ "$RUNNER_OS" == "macOS" ]; then
          cp -r dist/EyeTracker.app release/
          cp -r arduino release/
          cp README.md LICENSE release/
          cd release && zip -r ../EyeTracker-macOS.zip .
        else
          cp dist/EyeTracker-Linux release/
          cp -r arduino release/
          cp README.md LICENSE release/
          cd release && tar -czf ../EyeTracker-Linux.tar.gz .
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: EyeTracker-${{ runner.os }}
        path: |
          EyeTracker-Windows.zip
          EyeTracker-macOS.zip
          EyeTracker-Linux.tar.gz
        if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: EyeTracker-*
        merge-multiple: true
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          EyeTracker-Windows.zip
          EyeTracker-macOS.zip
          EyeTracker-Linux.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}